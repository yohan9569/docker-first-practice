# Workflow 의 이름
name: Java CI with Gradle

# EVENT: main 브랜치에 push 혹은 pull request 가 merged 시 동작.
on:
  push:
    branches: ["main"]

# JOB 모음 - job 끼리 병렬 처리가 기본.
jobs:
  # JOB
  integration:
    # RUN ON
    runs-on: ubuntu-latest
    # STEP 모음  # - 하나가 하나의 step
    steps:
      # 1. 프로그램 빌드 (Java 빌드)
      # (1-1) Java 및 Docker 빌드를 위한 환경 설정
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # (1-2) Java 빌드를 위한 ./gradlew 파일 권한 변경
      - name: Run chmod to make gradlew executable
        run: chmod +x ./gradlew

      # (1-3) Java 빌드
      - name: Spring Boot Build
        run: ./gradlew clean build

      # 2. Docker 이미지 빌드
      # (2-1) DockerFile 을 기반으로 Docker Image 빌드
      - name: Docker Image Build
        run: docker build --build-arg SPRING_PROFILE=develop -t ${{ secrets.DOCKERHUB_USERNAME }}/github-actions-demo .

      # (2-2) Docker Hub 에 Login
      - name: Docker Hub Login
        uses: docker/login-action/@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PW }}

      # (2-3) Docker Hub 에 빌드된 이미지 push
      - name: Docker Hub Push
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/github-actions-demo
